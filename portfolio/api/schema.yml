openapi: 3.0.3
info:
  title: portfolio API
  version: 1.0.0
  description: Documentation of API endpoints of portfolio
paths:
  /api/activities/:
    get:
      operationId: activities_list
      tags:
        - activities
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
          description: ''
  /api/activities/{uuid}/:
    get:
      operationId: activities_retrieve
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this activity.
          required: true
      tags:
        - activities
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
  /api/activities/{uuid}/biometrics/:
    get:
      operationId: activities_biometrics_list
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this activity.
          required: true
      tags:
        - activities
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Biometrics'
          description: ''
  /api/activities/{uuid}/geo_json/:
    get:
      operationId: activities_geo_json_retrieve
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this activity.
          required: true
      tags:
        - activities
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
  /api/activities/{uuid}/svg/:
    get:
      operationId: activities_svg_list
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this activity.
          required: true
      tags:
        - activities
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivitySVGPoints'
          description: ''
  /api/auth-token/:
    post:
      operationId: auth_token_create
      tags:
        - auth-token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - json
              - yaml
        - in: query
          name: lang
          schema:
            type: string
            enum:
              - af
              - ar
              - ar-dz
              - ast
              - az
              - be
              - bg
              - bn
              - br
              - bs
              - ca
              - ckb
              - cs
              - cy
              - da
              - de
              - dsb
              - el
              - en
              - en-au
              - en-gb
              - eo
              - es
              - es-ar
              - es-co
              - es-mx
              - es-ni
              - es-ve
              - et
              - eu
              - fa
              - fi
              - fr
              - fy
              - ga
              - gd
              - gl
              - he
              - hi
              - hr
              - hsb
              - hu
              - hy
              - ia
              - id
              - ig
              - io
              - is
              - it
              - ja
              - ka
              - kab
              - kk
              - km
              - kn
              - ko
              - ky
              - lb
              - lt
              - lv
              - mk
              - ml
              - mn
              - mr
              - ms
              - my
              - nb
              - ne
              - nl
              - nn
              - os
              - pa
              - pl
              - pt
              - pt-br
              - ro
              - ru
              - sk
              - sl
              - sq
              - sr
              - sr-latn
              - sv
              - sw
              - ta
              - te
              - tg
              - th
              - tk
              - tr
              - tt
              - udm
              - ug
              - uk
              - ur
              - uz
              - vi
              - zh-hans
              - zh-hant
      tags:
        - schema
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/users/:
    get:
      operationId: users_list
      tags:
        - users
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this user.
          required: true
      tags:
        - users
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this user.
          required: true
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this user.
          required: true
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/me/:
    get:
      operationId: users_me_retrieve
      tags:
        - users
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Activity:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        owner:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        time:
          type: string
          format: date-time
          readOnly: true
        distance:
          type: number
          format: double
          readOnly: true
          nullable: true
        duration:
          type: number
          format: double
          readOnly: true
          nullable: true
        elevation:
          type: integer
          readOnly: true
          nullable: true
        trimp:
          type: integer
          readOnly: true
          nullable: true
      required:
        - distance
        - duration
        - elevation
        - name
        - owner
        - time
        - trimp
        - uuid
    ActivitySVGPoints:
      type: object
      properties:
        x:
          type: number
          format: double
        y:
          type: number
          format: double
      required:
        - x
        - y
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
        - password
        - token
        - username
    Biometrics:
      type: object
      properties:
        heart_rate:
          type: integer
          readOnly: true
          nullable: true
        cadence:
          type: integer
          readOnly: true
          nullable: true
        time:
          type: string
          format: date-time
          readOnly: true
        latitude:
          type: number
          format: double
          readOnly: true
        longitude:
          type: number
          format: double
          readOnly: true
        altitude:
          type: number
          format: double
          readOnly: true
      required:
        - altitude
        - cadence
        - heart_rate
        - latitude
        - longitude
        - time
    PatchedUser:
      type: object
      properties:
        name:
          type: string
          title: Name of User
          maxLength: 255
        url:
          type: string
          format: uri
          readOnly: true
    User:
      type: object
      properties:
        name:
          type: string
          title: Name of User
          maxLength: 255
        url:
          type: string
          format: uri
          readOnly: true
      required:
        - url
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
