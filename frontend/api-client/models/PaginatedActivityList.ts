/* tslint:disable */
/* eslint-disable */
/**
 * portfolio API
 * Documentation of API endpoints of portfolio
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Activity } from './Activity';
import {
  ActivityFromJSON,
  ActivityFromJSONTyped,
  ActivityToJSON,
} from './Activity';

/**
 *
 * @export
 * @interface PaginatedActivityList
 */
export interface PaginatedActivityList {
  /**
   *
   * @type {number}
   * @memberof PaginatedActivityList
   */
  count: number;
  /**
   *
   * @type {string}
   * @memberof PaginatedActivityList
   */
  next?: string | null;
  /**
   *
   * @type {string}
   * @memberof PaginatedActivityList
   */
  previous?: string | null;
  /**
   *
   * @type {Array<Activity>}
   * @memberof PaginatedActivityList
   */
  results: Array<Activity>;
}

/**
 * Check if a given object implements the PaginatedActivityList interface.
 */
export function instanceOfPaginatedActivityList(
  value: object,
): value is PaginatedActivityList {
  if (!('count' in value) || value['count'] === undefined) return false;
  if (!('results' in value) || value['results'] === undefined) return false;
  return true;
}

export function PaginatedActivityListFromJSON(
  json: any,
): PaginatedActivityList {
  return PaginatedActivityListFromJSONTyped(json, false);
}

export function PaginatedActivityListFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PaginatedActivityList {
  if (json == null) {
    return json;
  }
  return {
    count: json['count'],
    next: json['next'] == null ? undefined : json['next'],
    previous: json['previous'] == null ? undefined : json['previous'],
    results: (json['results'] as Array<any>).map(ActivityFromJSON),
  };
}

export function PaginatedActivityListToJSON(
  value?: PaginatedActivityList | null,
): any {
  if (value == null) {
    return value;
  }
  return {
    count: value['count'],
    next: value['next'],
    previous: value['previous'],
    results: (value['results'] as Array<any>).map(ActivityToJSON),
  };
}
