/* tslint:disable */
/* eslint-disable */
/**
 * portfolio API
 * Documentation of API endpoints of portfolio
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Biometrics
 */
export interface Biometrics {
    /**
     * 
     * @type {number}
     * @memberof Biometrics
     */
    readonly heartRate: number | null;
    /**
     * 
     * @type {number}
     * @memberof Biometrics
     */
    readonly cadence: number | null;
    /**
     * 
     * @type {Date}
     * @memberof Biometrics
     */
    readonly time: Date;
    /**
     * 
     * @type {number}
     * @memberof Biometrics
     */
    readonly latitude: number;
    /**
     * 
     * @type {number}
     * @memberof Biometrics
     */
    readonly longitude: number;
    /**
     * 
     * @type {number}
     * @memberof Biometrics
     */
    readonly altitude: number;
}

/**
 * Check if a given object implements the Biometrics interface.
 */
export function instanceOfBiometrics(value: object): value is Biometrics {
    if (!('heartRate' in value) || value['heartRate'] === undefined) return false;
    if (!('cadence' in value) || value['cadence'] === undefined) return false;
    if (!('time' in value) || value['time'] === undefined) return false;
    if (!('latitude' in value) || value['latitude'] === undefined) return false;
    if (!('longitude' in value) || value['longitude'] === undefined) return false;
    if (!('altitude' in value) || value['altitude'] === undefined) return false;
    return true;
}

export function BiometricsFromJSON(json: any): Biometrics {
    return BiometricsFromJSONTyped(json, false);
}

export function BiometricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Biometrics {
    if (json == null) {
        return json;
    }
    return {
        
        'heartRate': json['heart_rate'],
        'cadence': json['cadence'],
        'time': (new Date(json['time'])),
        'latitude': json['latitude'],
        'longitude': json['longitude'],
        'altitude': json['altitude'],
    };
}

export function BiometricsToJSON(value?: Omit<Biometrics, 'heart_rate'|'cadence'|'time'|'latitude'|'longitude'|'altitude'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
    };
}

